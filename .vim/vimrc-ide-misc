" Plugins with fancy and IDE-like integration stuff
" vim: set foldmethod=marker foldlevel=0:
" ---------------------------------------
" Code snippets (complete with C-k) / snipmate replacement
Plug 'Shougo/neosnippet.vim'
Plug 'Shougo/neosnippet-snippets'
Plug 'honza/vim-snippets'
" neosnippet settings {{{
let g:neosnippet#enable_snipmate_compatibility = 1    " Use own snipmate snippets from .vim/snippets
" Plugin key-mappings.
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)
" For snippet_complete marker.
" if has('conceal')
"   set conceallevel=2 concealcursor=i
" endif
" }}}

" Project and session management
" ------------------------------
" Allow project-local vim config (.lvimrc)
Plug 'embear/vim-localvimrc'
let g:localvimrc_persistent = 1 " Remember decisions in file
let g:localvimrc_sandbox = 0 " don't nag with sandbox
" Automatically switch to project root with <leader>cd
Plug 'airblade/vim-rooter'
let g:rooter_manual_only = 1

