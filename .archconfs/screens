#!/bin/bash
# This script toggles the extended monitor outputs if something is connected
# no parameters: toggle
# -d: dual screen if possible
# anything else: single screen
#
# for brightness requires script /usr/bin/brightness (which does echo $1 > /sys/class/.../brightness without password)!

DEFAULT_OUTPUT='LVDS1' # your notebook monitor
OUTPUTS='VGA1 HDMI1'   # outputs to toggle if connected
BRIGHT=$(cat /sys/class/backlight/acpi_video0/brightness)  # save current brightness
EXT_OPTS="--auto --right-of $DEFAULT_OUTPUT --rotate left" # Actual settings for external monitor
AFTER_EXEC="--pos 0x1020"                                  # after-adjustment (optional)

XRANDR=`xrandr` #get info
EXECUTE="" #xrandr execution string (to be built)
for CURRENT in $OUTPUTS; do
        if [[ $XRANDR == *$CURRENT\ connected* ]]; then # is connected
                if [[ "$1" == "" ]] # no parameters given -> toggle
                then
                        echo "Toggling screen mode!"
                        if [[ $XRANDR == *$CURRENT\ connected\ \(* ]]; then # is disabled
                                EXECUTE+=" --output $CURRENT $EXT_OPTS "
                        else
                                EXECUTE+=" --output $CURRENT --off "
                        fi
                else
                        if [[ "$1" == "-d" ]]; then #explicitly dual screen
                                echo "Setting dual screen!"
                                EXECUTE+=" --output $CURRENT $EXT_OPTS "
                        else
                                echo "Setting internal screen!"
                                EXECUTE+=" --output $CURRENT --off "
                        fi
                fi
        else # make sure disconnected outputs are off
                EXECUTE+=" --output $CURRENT --off "
        fi
done

#set monitor modes
xrandr --output $DEFAULT_OUTPUT --auto $EXECUTE
xrandr --output $DEFAULT_OUTPUT $AFTER_EXEC
if [[ "$BRIGHT" != "$(cat /sys/class/backlight/acpi_video0/brightness)" ]]; then
    sudo brightness $BRIGHT #restore brightness
fi
