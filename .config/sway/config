# Config for sway (~/.config/sway/config)
# Read `man 5 sway` for a complete reference.

# Variables
# ---------

# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $alt Mod1

# Home row direction keys (Neo2 style)
set $left i
set $down a
set $up l
set $right e

# Your preferred terminal emulator
set $term alacritty

# Config dir (also location of scripts)
set $swayconfdir ~/.config/sway

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | fuzzel --dmenu | xargs swaymsg exec --
set $menu bemenu-run -i

# Outputs
# -------

# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill

# You can get the names of your outputs by running: swaymsg -t get_outputs
output "BNQ BenQ GL2450H J9D00965SL0" pos 0 0 resolution 1920x1080 transform 270
# output "Samsung Electric Company LU28R55 HNMX403391" pos 1080 0 resolution 3840x2160 scale 1.3
# output eDP-1 pos 1080 1665 resolution 1920x1200
output "Samsung Electric Company LU28R55 HNMX403391" pos 1080 0 resolution 3840x2160
output eDP-1 pos 1080 2160 resolution 1920x1200

# Inputs
# ------

#input "2:7:SynPS/2_Synaptick_TouchPad" {  # T460 touchpad name
# P16s touchpad:
input "1267:12811:ELAN0688:00_04F3:320B_Touchpad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input * {
    xkb_layout "de"
    xkb_variant "neo"
    xkb_options ""
}

# Misc settings
# -------------

# Font used for title bars
#font pango:SourceCodePro Medium 10
font pango:Inconsolata LGC 10

# Status bar
bar {
  swaybar_command waybar
}

# Lock and Idle
# NOTE: Workaround for fingerprint reader:
# https://github.com/swaywm/swaylock/issues/61#issuecomment-965175390
set $swaylock_cmd 'swaylock -f -c 000000'

exec swayidle -w \
         timeout 300 $swaylock_cmd \
         timeout 600 'swaymsg "output * power off"' \
         resume 'swaymsg "output * power on"' \
         before-sleep $swaylock_cmd

# Key bindings
# ------------
# NOTE: use wev to get key names

# Basics:

    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window ((q)uit)
    bindsym $mod+Shift+q kill

    # Start your launcher to e(x)ecute a program
    bindsym $mod+x exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the (c)onfiguration file or (r)estart sway
    bindsym $mod+Shift+c reload
    bindsym $mod+Shift+r restart
    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+z exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

# Moving around:

    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right


    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

# Workspaces:

    # Switch to workspace (using xmonad-style display swap semantics)
    # normal sway command would be: workspace number N
    bindsym $mod+1 exec $swayconfdir/ws_util.py workspace 1
    bindsym $mod+2 exec $swayconfdir/ws_util.py workspace 2
    bindsym $mod+3 exec $swayconfdir/ws_util.py workspace 3
    bindsym $mod+4 exec $swayconfdir/ws_util.py workspace 4
    bindsym $mod+5 exec $swayconfdir/ws_util.py workspace 5
    bindsym $mod+6 exec $swayconfdir/ws_util.py workspace 6
    bindsym $mod+7 exec $swayconfdir/ws_util.py workspace 7
    bindsym $mod+8 exec $swayconfdir/ws_util.py workspace 8
    bindsym $mod+9 exec $swayconfdir/ws_util.py workspace 9
    bindsym $mod+0 exec $swayconfdir/ws_util.py workspace 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

# Layout stuff:

    # You can "split" the current object of your focus with
    # for (h)orizontal and verti(k)al splits respectively.
    bindsym $mod+h splith
    bindsym $mod+k splitv

    # Switch the current container between different layout styles
    # which are (t)abbed, (s)tacking and (d)efault
    bindsym $mod+t layout tabbed
    bindsym $mod+s layout stacking
    bindsym $mod+d layout toggle split

    # Make the current focus (f)ullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the (p)arent container
    bindsym $mod+p focus parent

# Scratchpad:

    # Move the currently focused window to the scratchpad.
    bindsym $mod+Shift+period move scratchpad
    # Show the next scratchpad window or hide the focused scratchpad window (cycles through).
    bindsym $mod+period scratchpad show
    # Access to special scratchpad terminal
    bindsym $mod+v exec $swayconfdir/scratch_util.sh term
    bindsym $mod+Delete exec $swayconfdir/scratch_util.sh pic
    # TODO: have custom scratchpad show script that skips over special scratch windows
    # that can use a temporary mark for the currently shown active window for cycling.

# Resizing containers:

mode "resize" {
    # [[left|right]|[up|down]] will [shrink|grow] the containers [width|height]
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px
    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px
    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Various key bindings:

    # P16s take call key
    bindsym XF86PickupPhone exec $swaylock_cmd
    # P16s stop call key
    bindsym XF86HangupPhone exec "sudo systemctl suspend"

    # Screenshots
    bindsym Print            exec grimshot save active
    bindsym Shift+Print      exec grimshot save output
    bindsym $mod+Print       exec grimshot save window
    bindsym $mod+Shift+Print exec grimshot save area

    # Custom media keys
    bindsym XF86AudioLowerVolume exec "amixer set Master 5%-"
    bindsym XF86AudioRaiseVolume exec "amixer set Master 5%+"
    bindsym XF86AudioMute exec "amixer set Master toggle"
    bindsym XF86AudioMicMute exec "amixer set Capture toggle"
    bindsym XF86MonBrightnessUp exec "brightnessctl set 5%+"
    bindsym XF86MonBrightnessDown exec "brightnessctl set 5%-"

    # Custom actions
    bindsym $mod+Shift+m exec $swayconfdir/mympc.sh list | bemenu -i | xargs ~/.config/sway/mympc.sh select
    bindsym $mod+m exec $swayconfdir/mympc.sh gui $term
    bindsym $mod+n exec $swayconfdir/net.sh list | bemenu -i | xargs ~/.config/sway/net.sh select

# Window rules
# ------------

# if desired, disable xwayland (pure wayland setup)
# use xlsclients to check running xwayland apps
# xwayland disable

# prefix titles of xwayland windows
for_window [shell="xwayland"] title_format "[XWayland] %title"

# assign windows to specific workspace by using the app_id/class/etc
# use swaymsg -t get_tree to inspect current windows
assign [app_id="teams-for-linux"] workspace 10
assign [app_id="org.telegram.desktop"] workspace 10

# Autostart
# ---------
# NOTE: use exec_always to also restart on config restart

# needed for fprintd and other stuff
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
# for persistent clipboard
exec wl-paste -t text --watch clipman store --no-persist
# for screenshare
exec --no-startup-id /usr/lib/xdg-desktop-portal -r

exec syncthing

exec qpwgraph --minimized
exec mpd
exec mpdscribble

exec telegram-desktop

# ----------------
include /etc/sway/config.d/*
